<?php 

define('SHANTI_ESSAYS_PATH',drupal_get_path('module','shanti_essays'));
define('SHANTI_ESSAYS_Q', $GLOBALS['_GET']['q']);

/**
 * Add your help info here.
 */
function shanti_essays_help($path, $arg) {
  if ($path == "admin/help#shanti_essays") {
    return '<p>' . t('SHANTI Essays, my friend.') . '</p>';
  }
}
  
/**
* This gets called when the module is enabled. 
*/
function shanti_essays_enable() {
  drupal_set_message($message = t('SHANTI Essays activated.'), $type = 'status');
  drupal_theme_rebuild();
}

function shanti_essays_menu() {
  return array(
    'shanti_essays' => array(
      'page callback' => 'shanti_essays_default',
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    ),
    'shanti_essays/whole' => array(
      'page callback' => 'shanti_essays_default',
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    ),
    'shanti_essays/whole/%' => array(
      'page callback' => 'shanti_essays_whole',
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
      'file' => 'shanti_essays.whole.inc',
    ),
    'shanti_essays/api' => array(
      'page callback' => 'shanti_essays_default',
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    ),
    'shanti_essays/api/%' => array(
      'page callback' => 'shanti_essays_api',
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    ),
    'shanti_essays/voyant/%' => array(
      'page callback' => 'shanti_essays_voyant',
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    ),
  );
}

function shanti_essays_default(){
  drupal_goto("");
}

function shanti_essays_voyant($nid) {
  global $base_url;
  $url = "http://voyeurtools.org";
  drupal_goto($url,array('external' => TRUE,  'query' => array('input' => "$base_url/shanti_essays/api/$nid")));
}

/**
 * Generates an HTML fragment for embedding elsewhere. We simply print here,
 * by-passing the need to override the html and page templates.
 */
function shanti_essays_api($nid) {
  $node = node_load($nid);
  if (!$node) { return MENU_NOT_FOUND; }
  if (!node_access('view', $node)) { return MENU_ACCESS_DENIED; }
  if (user_access('access content')) {
    if (isset($node->book)) {
      $book_id      = $node->book['bid'];      
      $tree         = book_menu_subtree_data($node->book);
      $contents     = book_export_traverse($tree, 'shanti_essays_whole_node');            
      $toc_block    = book_export_traverse($tree, 'shanti_essays_whole_toc');
      print "<div id='shanti-essay-api-result'>\n";
      print "<ul id='shanti-essay-toc'>\n$toc_block\n</ul>\n";
      print "<div id='shanti-essay-content'>\n$contents\n</div>\n";
      print "</div>\n";
    } 
    else { drupal_not_found(); }
  } 
  else { drupal_access_denied(); }
}

/**
 * We alter some templates that have been defined by the book module.
 * We do this to control how books look in normal viewing mode.
 * We may want to have an admin option to apply this to only books of a certain
 * content type.
 * NOTE: These have nothing to do with the viewer define above.
 */
function shanti_essays_theme_registry_alter(&$theme_registry) {
  $theme_registry['html__book']['render element']       = 'page';
  $theme_registry['html__book']['template']             = 'templates/html--book';
  $theme_registry['html__book']['path']                 = SHANTI_ESSAYS_PATH;
  $theme_registry['page__node__book']['render element'] = 'page';
  $theme_registry['page__node__book']['template']       = 'templates/page--node';
  $theme_registry['page__node__book']['path']           = SHANTI_ESSAYS_PATH;
  $theme_registry['node__book']['render element']       = 'node';
  $theme_registry['node__book']['template']             = 'templates/node--book';
  $theme_registry['node__book']['path']                 = SHANTI_ESSAYS_PATH;
  $theme_registry['book_navigation']['render element']  = 'book_navigation';
  $theme_registry['book_navigation']['template']        = 'templates/book-navigation';
  $theme_registry['book_navigation']['path']            = SHANTI_ESSAYS_PATH;
}

/**
 * We use this hook to change how the default book page looks. Because there is
 * no preprocess function for specific content types, we have to write a 
 * function that traps all node calls and changes only nodes of type 'book'.
 *
 * @param type $vars
 */
function shanti_essays_preprocess_node(&$vars) {
  
  // You may want to make the type configurable from an admin page
  if ($vars['type'] == 'book') {    
    $nid      = $vars['nid'];
    $bid      = $vars['book']['bid'];
    $top_mlid = $vars['book']['p1'];
        
    if (user_access('add content to books')) {
      // Fix BMS link
      if(isset($vars['content']['links'][0]['#links']['book_made_simple_book'])) {
        $vars['content']['links']['book']['#links']['book_made_simple_book'] = $vars['content']['links'][0]['#links']['book_made_simple_book'];
        $vars['content']['links']['book']['#links']['book_made_simple_book']['title'] = 'Add Essay page below this page';
        unset($vars['content']['links'][0]);      
      }
      // Add another link to add a page to the top          
      $vars['content']['links']['book']['#links']['shanti_essays_add_page_top'] = array(
        'title'       => t('Add Essay page below top page'),
        'href'        => 'node/add/book',
        'query'       => array('parent' => $top_mlid),
        'attributes'  => array('title' => 'Add Essay page below <em>top</em> page')
      );
      $vars['content']['links']['book']['#links']['shanti_essays_view_whole'] = array(
        'title'       => t('View in SHANTI Reader'),
        'href'        => "shanti_essays/whole/$bid",
        'fragment'    => "node-$nid",
        'attributes'  => array('title' => "View book in SHANTI's Reader")
      );
      $vars['content']['links']['book']['#links']['shanti_essays_view_pubreader'] = array(
        'title'       => t('View in PubReader'),
        'href'        => "book_pubreader/$bid",
        'attributes'  => array('title' => 'View book in NIH PubReader')
      );
      $vars['content']['links']['book']['#links']['shanti_essays_view_voyant'] = array(
        'title'       => t('View in Voyant'),
        'href'        => "shanti_essays/voyant/$bid",
        'attributes'  => array('title' => 'View book in Voyant tools', 'target' => '_blank')
      );
      
      // And modify the existing one
      if ($bid == $nid) {
        unset($vars['content']['links']['book']['#links']['book_made_simple_book']);
        $vars['content']['links']['book']['#links']['shanti_essays_add_page_top']['title'] = "Add Essay page";
      }
    }
    
    // What the hell is all this for?
    $book_node = node_load($bid);   
    $book_menu_name = book_menu_name($bid);
    $book_links = menu_load_links($book_menu_name);
    $vars['shanti_essays']['top_mlid']   = $top_mlid;
    $vars['shanti_essays']['book_title'] = $book_node->title;
    $vars['shanti_essays']['book_url']   = drupal_get_path_alias('/node/' . $bid);
    
    // Add CSS and JS

    drupal_add_css(SHANTI_ESSAYS_PATH . '/css/shanti_essays.css');
    drupal_add_css(SHANTI_ESSAYS_PATH . '/css/shanti_essays_footnotes.css');

    /*
    $js_settings = array(
      'book' => $vars['book'],
      'book_title' => $vars['shanti_essays']['book_title'],
    );
    drupal_add_js(array('shantiEssays' => $js_settings), 'setting');
    drupal_add_js(SHANTI_ESSAYS_PATH . '/js/shanti_essays.js', 'file');
    */
       
  }
}
