<?php 

define('SHANTI_ESSAYS_PATH',drupal_get_path('module','shanti_essays'));
define('SHANTI_ESSAYS_Q', $GLOBALS['_GET']['q']);

function shanti_essays_help($path, $arg) {
  if ($path == "admin/help#shanti_essays") {
    return '<p>' . t('SHANTI Essays, my friend.') . '</p>';
  }
}
  
function shanti_essays_enable() {
  drupal_set_message($message = t('SHANTI Essays activated.'), $type = 'status');
  drupal_theme_rebuild();
}

function shanti_essays_menu() {
  return array(
    'shanti_essays' => array(
      'page callback' => 'shanti_essays_default',
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    ),
    'shanti_essays/whole' => array(
      'page callback' => 'shanti_essays_default',
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    ),
    'shanti_essays/whole/%' => array(
      'page callback' => 'shanti_essays_whole',
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    ),
    'shanti_essays/api' => array(
      'page callback' => 'shanti_essays_default',
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    ),
    'shanti_essays/api/%' => array(
      'page callback' => 'shanti_essays_api',
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    ),
    'shanti_essays/voyant/%' => array(
      'page callback' => 'shanti_essays_voyant',
      'page arguments' => array(2),
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    ),
  );
}

function shanti_essays_default(){
  drupal_goto("<front>"); // Redirect to front page
}

function shanti_essays_voyant($nid) {
  global $base_url;
  $url = "http://voyeurtools.org";
  drupal_goto($url,array('external' => TRUE,  'query' => array('input' => "$base_url/shanti_essays/api/$nid")));
}

/**
 * Generates an HTML fragment for embedding elsewhere. We simply print here,
 * by-passing the need to override the html and page templates.
 * Note the dependency on shanti_essays_whole templates.
 */
function shanti_essays_api($nid) {
  $node = node_load($nid);
  if (!$node) { return MENU_NOT_FOUND; }
  if (!node_access('view', $node)) { return MENU_ACCESS_DENIED; }
  if (user_access('access content')) {
    if (isset($node->book)) {
      $book_id      = $node->book['bid'];      
      $tree         = book_menu_subtree_data($node->book);
      $contents     = book_export_traverse($tree, 'shanti_essays_whole_node');            
      $toc_block    = book_export_traverse($tree, 'shanti_essays_whole_toc');
      print "<div id='shanti-essay-api-result'>\n";
      print "<ul id='shanti-essay-toc'>\n$toc_block\n</ul>\n";
      print "<div id='shanti-essay-content'>\n$contents\n</div>\n";
      print "</div>\n";
    } 
    else { drupal_not_found(); }
  } 
  else { drupal_access_denied(); }
}

/**
 * We define some of our own templates, which may be overridden by others.
 */
function shanti_essays_theme($existing, $type, $theme, $path) {
  return array(
    'shanti_essays_whole_html' => array(
      'variables' => array('title' => NULL, 'contents' => NULL, 'depth' => NULL),
      'template' => 'templates/shanti-essays-whole-html',
      'path' => SHANTI_ESSAYS_PATH,
    ),
    'shanti_essays_whole_node_html' => array(
      'variables' => array('node' => NULL, 'children' => NULL),
      'template' => 'templates/shanti-essays-whole-node-html',
      'path' => SHANTI_ESSAYS_PATH,
    ),
  );
}

/**
 * We alter some templates that have been defined by others.
 */
function shanti_essays_theme_registry_alter(&$theme_registry) {  
  $theme_registry['page__shanti_essays__whole']['template']	= 'templates/page--shanti-essays--whole';
  $theme_registry['page__shanti_essays__whole']['path']     = SHANTI_ESSAYS_PATH;  
  $theme_registry['node__book']['template']             		= 'templates/node--book';
  $theme_registry['node__book']['path']                 		= SHANTI_ESSAYS_PATH;
  $theme_registry['book_navigation']['template']        		= 'templates/book-navigation';
  $theme_registry['book_navigation']['path']            		= SHANTI_ESSAYS_PATH;
}

/**
 * We use this hook to change how the default book page looks. Because there is
 * no preprocess function for specific content types, we have to write a 
 * function that traps all node calls and changes only nodes of type 'book'.
 *
 * @param type $vars
 */

/* TEST
function shanti_essays_preprocess_node(&$vars) {
    $book = $vars['book'];
  	if ($vars['book']['bid'] != $vars['nid']) {
  		$book_node = node_load($vars['book']['bid']);
  		$book = $book_node->book;
  	}
    $tree = book_menu_subtree_data($book);
    $book_toc 			= book_export_traverse($tree, 'shanti_essays_whole_toc');
  	$book_contents 	= book_export_traverse($tree, 'shanti_essays_whole_node');            
		$vars['content']['shanti_essays']['KAHUNA'] = theme('shanti_essays_whole_html', array('title' => $book['title'], 'book_id' => $book['bid'], 'contents' => $book_contents, 'toc_block' => $book_toc, 'depth' => $book['depth']));

		$vars['toc_menu']['links'] = array(
			'toc-reorder' => array(
				'#markup' => l(
					'<i class="fa fa-edit fa-lg"></i>',
					"admin/content/book/{$vars['book_id']}", 
					array('query' => array('destination' => "/shanti_essays/whole/{$vars['book_id']}"),'html' => TRUE)
				),
				'#access' => user_access('administer book outlines')
			),
			'toc-go-home' => array(
				'#markup' => l(
					'<i class="fa fa-home fa-lg"></i>',
					"node/{$vars['book_id']}", 
					array('html' => TRUE)
				),
				//'#access' => user_access()    
			),
		);
		drupal_add_css(SHANTI_ESSAYS_PATH . '/css/shanti_essays_whole.css');
		drupal_add_css(SHANTI_ESSAYS_PATH . '/css/shanti_essays_footnotes.css');
		$js_settings = array('base_path' => SHANTI_ESSAYS_PATH);
		drupal_add_js(array('shantiEssays' => $js_settings), 'setting');
		//drupal_add_js(SHANTI_ESSAYS_PATH . '/js/shanti_essays_whole_2.js', 'file');
		//drupal_add_js(SHANTI_ESSAYS_PATH . '/js/jquery.transit.min.js', 'file');
		//drupal_add_js(SHANTI_ESSAYS_PATH . '/js/jquery.inview.min.js', 'file');
}
*/

function shanti_essays_preprocess_node(&$vars) {
    
  // Make big changes for how books are viewed
  if ($vars['type'] == 'book' && $vars['teaser'] == FALSE) { 
  
  	// Get some info ... If not top of book, go to top
    $nid  = $vars['nid'];
    $bid  = $vars['book']['bid'];
    if ($bid != $nid) {
      drupal_goto("node/$bid",array('fragment' => "node-$nid"));
    }
    $top_mlid = $vars['book']['p1'];
    
    // Create the TOC and combined body
    // Both of these are already rendered
    $book = $vars['book'];
    $tree = book_menu_subtree_data($book);
    $vars['content']['shanti_essays']['toc'] 		= book_export_traverse($tree, 'shanti_essays_whole_toc');
    $vars['content']['shanti_essays']['body']  	= book_export_traverse($tree, 'shanti_essays_whole_node');            

		// Create the Meta element
		$build = node_view($vars['node'], 'metadata');
		unset($build['#theme']); 
		hide($build['title']);
		hide($build['links']);
		hide($build['group_content_access']);
		hide($build['field_general_featured_image']); // CCK dependency
		hide($build['field_book_content']); // CCK dependency
		$vars['content']['shanti_essays']['meta']	= $build;

		// Fix BMS link (though not used)
		if(isset($vars['content']['links'][0]['#links']['book_made_simple_book'])) {
			$vars['content']['links']['book']['#links']['book_made_simple_book'] = $vars['content']['links'][0]['#links']['book_made_simple_book'];
			$vars['content']['links']['book']['#links']['book_made_simple_book']['title'] = 'Add Essay page below this page';
			unset($vars['content']['links'][0]);      
		}

		// Add another link to add a page to the top          
		$vars['content']['links']['book']['#links']['shanti_essays_add_page_top'] = array(
			'title'       => t('Add Essay page below top page'),
			'href'        => 'node/add/book',
			'query'       => array('parent' => $top_mlid),
			'attributes'  => array('title' => 'Add Essay page below <em>top</em> page')
		);
		
		// And modify the existing one
		if ($bid == $nid) {
			unset($vars['content']['links']['book']['#links']['book_made_simple_book']);
			$vars['content']['links']['book']['#links']['shanti_essays_add_page_top']['title'] = "Add Essay page";
		}

		$vars['content']['links']['shanti_essays']['viewers']['#theme'] = 'links__node__book'; // Override?
		$vars['content']['links']['shanti_essays']['viewers']['#attributes'] = array('class' => array('links','inline'));
		$vars['content']['links']['shanti_essays']['viewers']['#links'] = array(
			'shanti_essays_view_whole' => array(
				'title'       => t('View in SHANTI Reader'),
				'href'        => "shanti_essays/whole/$bid",
				'fragment'    => "node-$nid",
				'attributes'  => array('class' => array(), 'title' => "View book in SHANTI's Reader")				
			),
			'shanti_essays_view_pubreader' => array(
				'title'       => t('View in PubReader'),
				'href'        => "book_pubreader/$bid",
				'attributes'  => array('class' => array(), 'title' => 'View book in NIH PubReader')
			),
			'shanti_essays_view_voyant' => array(
				'title'       => t('View in Voyant'),
				'href'        => "shanti_essays/voyant/$bid",
				'attributes'  => array('class' => array(), 'title' => 'View book in Voyant tools', 'target' => '_blank')				
			),
		);
		if (user_access('access printer-friendly version')) {
			$vars['content']['links']['shanti_essays']['viewers']['#links']['book_printer'] = $vars['content']['links']['book']['#links']['book_printer'];					
			$vars['content']['links']['shanti_essays']['viewers']['#links']['book_printer']['title'] = 'View for printing';					
			$vars['content']['links']['shanti_essays']['viewers']['#links']['book_printer']['attributes'] = array('class' => array());					
		}
		unset($vars['content']['links']['book']['#links']['book_printer']);
		$vars['content']['links']['shanti_essays']['viewers']['#attributes']['class'] = array('links');		

    $book_menu_name = book_menu_name($bid);
    $book_links = menu_load_links($book_menu_name);    
    $vars['content']['shanti_essays']['bid']        = $bid;
    $vars['content']['shanti_essays']['top_mlid']   = $top_mlid;
    $vars['content']['shanti_essays']['book_title'] = $book['title'];
    $vars['content']['shanti_essays']['book_url']   = drupal_get_path_alias('/node/' . $bid);
        
    // Add CSS and JS
    
    drupal_add_css(SHANTI_ESSAYS_PATH . '/css/shanti_essays.css');
    drupal_add_css(SHANTI_ESSAYS_PATH . '/css/shanti_essays_footnotes.css');

    $js_settings = array(
      'book' => $vars['book'],
      'book_title' 	=> $vars['shanti_essays']['book_title'],
      //'toc_content' => $vars['content']['shanti_essays']['toc'],
    );
    drupal_add_js(array('shantiEssays' => $js_settings), 'setting');
    drupal_add_library('system', 'ui.tabs');
    drupal_add_js(SHANTI_ESSAYS_PATH . '/js/shanti_essays.js', 'file');
	  drupal_add_js(SHANTI_ESSAYS_PATH . '/js/jquery.localscroll.min.js', 'file');
  	drupal_add_js(SHANTI_ESSAYS_PATH . '/js/jquery.scrollTo.min.js', 'file');
  	
  }
}

function shanti_essays_library_alter(&$libraries, $module) {
  $libraries['ui']['css']               = array();
  $libraries['ui.accordion']['css']     = array();
  $libraries['ui.autocomplete']['css']  = array();
  $libraries['ui.button']['css']        = array();
  $libraries['ui.datepicker']['css']    = array();
  $libraries['ui.dialog']['css']        = array();
  $libraries['ui.draggable']['css']     = array();
  $libraries['ui.droppable']['css']     = array();
  $libraries['ui.mouse']['css']         = array();
  $libraries['ui.position']['css']      = array();
  $libraries['ui.progressbar']['css']   = array();
  $libraries['ui.resizable']['css']     = array();
  $libraries['ui.selectable']['css']    = array();
  $libraries['ui.slider']['css']        = array();
  $libraries['ui.sortable']['css']      = array();
  $libraries['ui.tabs']['css']          = array();
  $libraries['ui']['css'][SHANTI_ESSAYS_PATH . '/jquery-ui/jquery-ui.css'] = array();
}

//function shanti_essays_preprocess_html(&$vars) {}
//function shanti_essays_preprocess_page(&$vars, $hook) {}

////////// SHANTI Viewer ("Whole") Functions //////////

/**
 * The function creates a single page out of all the nodes that compose a
 * book. It also generates a table of contents and then passes these to
 * two templates, very much as the default book print function works.
 */
function shanti_essays_whole($nid) {
  $node = node_load($nid);
  if (!$node) { return MENU_NOT_FOUND; }
  if (!node_access('view', $node)) { return MENU_ACCESS_DENIED; }
  if (user_access('access content')) {
    if (isset($node->book)) {
      $tree         = book_menu_subtree_data($node->book);
      $contents     = book_export_traverse($tree, 'shanti_essays_whole_node');            
      $toc_block    = book_export_traverse($tree, 'shanti_essays_whole_toc');
      $book_id      = $node->book['bid'];
      return theme('shanti_essays_whole_html', array('title' => $node->title, 'book_id' => $book_id, 'contents' => $contents, 'toc_block' => $toc_block, 'depth' => $node->book['depth']));
    } 
    else { drupal_not_found(); }
  } 
  else { drupal_access_denied(); }
}

/**
 * This exists to conform to the model of how the book print function works.
 * Not sure if it is necceary to specify a new view mode but what the heck.
 */
function shanti_essays_entity_info_alter(&$info) {
  $info['node']['view modes'] += array(
    'whole' => array(
      'label' => t('Whole'),
      'custom settings' => FALSE,
    ),
    'metadata' => array(
      'label' => t('Metadata'),
      'custom settings' => FALSE,
    ),
  );
}

/**
 * Called by book_export_traverse() above to generate the content of the page.
 * May want to rewrite; this was just copied from the book module's print
 * function.
 */ 
function shanti_essays_whole_node($node, $children = '') {
	// This returns a render array (RA) for the view mode defined in shanti_essays_entity_info_alter()
  $build = node_view($node, 'whole');
  
  // We remove the theme option that may be have been set in the Render Array
  unset($build['#theme']); 
  
  // We hide a few things, include all fields but the content 
  hide($build['group_content_access']);
  hide($build['links']);
  foreach($build as $key => $val) { // Hide all fields but the content
  	if (preg_match('/^field_/',$key) && $key != 'field_book_content') { // This is a dependency on the CCK; should use BODY?
  		hide($build[$key]);
  	}
  }
  
  // Now we render it
  $node->rendered = drupal_render($build); // THIS IS WHERE IT IS!!!!
  
  // And we send the node and children to our theme
  return theme('shanti_essays_whole_node_html', array('node' => $node, 'children' => $children));
}

/**
 * Also called by book_export_traverse() to generate a table of contents.
 * This is a hand-made function that might be replaced by something more Drupally.
 */
function shanti_essays_whole_toc($node, $children = '') {
    $output = '';
    $nid = $node->nid;
    $title = check_plain($node->title);
    $depth = $node->book['depth'];
    
    if ($prev = book_prev($node->book)) {
      $x = $depth - $prev['depth'];
      if ($x > 0) $output .= "<ul class='level-{$prev['depth']}'>\n"; // $x should never be > 1
      elseif ($x < 0) {
        for ($i = 0; $i > $x; $i--) {
          $output .= "</ul>\n"; 
        }
      }
    }
    
		$output .= "<li class='toc-item-node' id='toc-item-node-$nid'><a href='#book-node-$nid'>$title</a></li>\n";
  	
    if ($next = book_next($node->book)) {
      // Do nothing
    } else {
      // Clean up ..
      for ($i = 0; $i < ($depth - 1); $i++) {
        $output .= "</ul>\n";         
      }
    }
    $output .= $children;
    return $output;
}

/**
 * We prepare variables for dispay of the SHANTI Reader page.
 * These provide some a book level edit link and a home button.
 * @param array $vars
 */
function template_preprocess_shanti_essays_whole_html(&$vars) {
        
  $vars['toc_menu']['links'] = array(
    'toc-reorder' => array(
      '#markup' => l(
        '<i class="fa fa-edit fa-lg"></i>',
        "admin/content/book/{$vars['book_id']}", 
        array('query' => array('destination' => "/shanti_essays/whole/{$vars['book_id']}"),'html' => TRUE)
      ),
      '#access' => user_access('administer book outlines')
    ),
    'toc-go-home' => array(
    	'#markup' => l(
      	'<i class="fa fa-home fa-lg"></i>',
        "node/{$vars['book_id']}", 
        array('html' => TRUE)
    	),
    	//'#access' => user_access()    
    ),
  );
      
  drupal_add_css(SHANTI_ESSAYS_PATH . '/css/shanti_essays_whole.css');
  drupal_add_css(SHANTI_ESSAYS_PATH . '/css/shanti_essays_footnotes.css');
  $js_settings = array('base_path' => SHANTI_ESSAYS_PATH);
  drupal_add_js(array('shantiEssays' => $js_settings), 'setting');
  drupal_add_js(SHANTI_ESSAYS_PATH . '/js/shanti_essays_whole_2.js', 'file');
  drupal_add_js(SHANTI_ESSAYS_PATH . '/js/jquery.transit.min.js', 'file');
  drupal_add_js(SHANTI_ESSAYS_PATH . '/js/jquery.inview.min.js', 'file');
}

/**
 * We prepare variables for the display of individual nodes in the SHANTI
 * Reader. These show links to edit or add pages.
 * @param type $vars
 */
function template_preprocess_shanti_essays_whole_node_html(&$vars) {

	//kpr($vars);

  $vars['book_edit_menu']['links'] = array(
    'toc-edit-page' => array(
      '#markup'   => l(
        '<i class="fa fa-edit fa-lg"></i>',
        "node/{$vars['node']->nid}/edit",
        array(
          'html' => TRUE, 
          'query' => array('destination' => current_path()),
          'fragment' => "node-{$vars['node']->nid}" 
          // Above does not work. May need to define a menu path that calls drupal_goto() 
        )
      ),
      '#access' => user_access('add content and child pages to books')
    ),
    'toc-add-child-page' => array(
      '#markup' => l(
        '<i class="fa fa-plus fa-lg"></i>',
        "node/add/book",
        array(
          'html' => TRUE,
          'query' => array('parent' => $vars['node']->book['mlid'])
        )
       ),
      '#access' => user_access('add content and child pages to books')
    )
  );
  $vars['depth']    = $vars['node']->book['depth'];
  $vars['title']    = check_plain($vars['node']->title);
  $vars['content']  = $vars['node']->rendered; // THIS IS CREATED IN *_whole_node()
  
  // NOTE: The Featured image is being hidden from the form for the content type
  // We need a way to programmatically hide fields in a view mode.
  //$vars['content'] = $vars['node']->field_book_content[$vars['node']->language][0]['value'];
  //$vars['metadata'] = array();
}

function shanti_essays_node_view($node, $view_mode, $langcode) {
	if ($view_node == 'whole' && $node->type == 'book') {

	}
}

/** 
 * Here we attempt to remove any theme-specific CSS files from our viewer, 
 * which we want to be pristine.
 * Note that this function DOES apply even when using your own delivery callback.
 * May want to add this in the callback itself
 * Also: Seems incredibly inefficient 
 */
function shanti_essays_css_alter (&$css) {
  if (preg_match("/^shanti_essays\/whole/", SHANTI_ESSAYS_Q)) {
    global $theme_key;
    foreach ($css as $k => $v) {
      if (preg_match("/$theme_key/",$k)) {
        unset($css[$k]);
      }
    }
  }
}

